basePath: /api/v1
definitions:
  handlers.RequestBody:
    properties:
      code:
        type: string
      expiration:
        type: string
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
    required:
    - name
    - price
    type: object
  web.errorResponse:
    properties:
      code:
        type: integer
      message:
        type: string
      status:
        type: string
    type: object
  web.response:
    properties:
      data: {}
    type: object
host: localhost:8080
info:
  contact: {}
  description: This Api handle some products
  title: Products API
  version: "1.0"
paths:
  /products:
    get:
      description: Get the list of all the available products
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Gets all the products
      tags:
      - products
    post:
      description: Creates a new product to be saved in the repository
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: Product to save
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/handlers.RequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Store a product
      tags:
      - products
  /products/{id}:
    delete:
      description: Deletes product of given id
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: Product id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Deletes product of given id
      tags:
      - products
    get:
      description: Returns a product that matches the id
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: Product id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Gets a product by id
      tags:
      - products
    put:
      description: updates product of given id
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: Product id
        in: path
        name: id
        required: true
        type: integer
      - description: Product to update
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/handlers.RequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Updates product of given id
      tags:
      - products
  /search:
    get:
      description: Returns all the products that have a price equal or greater than
        the given price
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: Product price
        in: query
        name: priceGt
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Gets products with price bigger than a given price
      tags:
      - products
swagger: "2.0"
